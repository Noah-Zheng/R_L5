library(ggplot2)
data(diamonds)
summary(diamonds)
names(diamonds)
levels(diamonds)
str(dismonds)
str(diamonds)
levels(diamonds$color)
?diamonds
#histgram of price
qplot(x=price, data=diamonds)
mean(diamonds$price)
length(diamonds[diamonds$price < 500])
length(diamonds$price < 500)
length(subset(diamonds, diamonds$price < 500))
length(subset(diamonds, diamonds$price < 250))
length(subset(diamonds, diamonds$price < 15000))
Less500 <- subset(diamonds, diamonds$price < 500)
less250 <- subset(diamonds, diamonds$price < 250)
less15000 <- subset(diamonds, diamonds$price < 15000)
?length
length(diamonds$price)
length(less500$price)
length(Less500$price)
length(less250$price)
View(diamonds)
less15000 <- subset(diamonds, diamonds$price >= 15000)
#histgram of price
qplot(x=price, data=diamonds)
#explore the largest peak in teh price histogram
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(1,2500), breaks = seq(1,2500,50))
#explore the largest peak in teh price histogram
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(1,1500), breaks = seq(1,1500,50))
ggsave('pricepeakhistgram.png')
ggsave('pricepeakhistgram.png')
#explore the largest peak in teh price histogram
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(1,1700), breaks = seq(1,1700,50))
#explore the largest peak in teh price histogram
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(1,1700), breaks = seq(1,1700,50)) +
stat_bin(aes(y=..count.., label=..count..), geom='text', vjust=-.5)
library(gridExtra)
p1 <- qplot(x = price, data = subset(diamonds, cut))
# frequency polygon
qplot(x = friend_count, data = subset(df, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous(limits = c(0,1000), breaks = seq(0,1000,50))
df <- read.csv('pseudo_facebook.tsv', sep = '\t')
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_grid(~cut)
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap(~cut)
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_grid(~cut)
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap(~cut)
by(diamonds$price, diamonds$cut, summary)
```{r}
library(ggplot2)
data(diamonds)
summary(diamonds)
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap(~cut)
by(diamonds$price, diamonds$cut, summary)
?facet_wrap
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap(~cut, scales = "free_y")
ggplot(diamonds, aes(x = price/carat)) +
geom_histogram() +
facet_wrap(~cut) +
scale_x_log10()
ggplot(diamonds, aes(x = price/carat)) +
geom_histogram() +
facet_wrap(~cut, scales = "free_y") +
scale_x_log10()
?ls
library()
search()
data(diamonds)
?diamonds
head(dd)
dd <- read.csv("diamondsbig.csv")
names(dd)
head(dd)
ggplot(dd, aes(price,x)) +
geom_point()
library(ggplot2)
ggplot(dd, aes(price,x)) +
geom_point()
ggplot(dd, aes(x,price)) +
geom_point()
ggplot(dd, aes(x,price)) +
geom_point(alpha = 0.05, position = position_jitter())
cor.test(dd$x, dd$price)
cor.test(dd$y, dd$price)
cor.test(dd$z, dd$price)
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .05, position = position_jitter())
range(dd$depth)
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001, position = position_jitter())+
scale_x_continuous(breaks = c(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001)+
scale_x_continuous(breaks = c(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001)+
scale_x_continuous(breaks = seq(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001, position = position_jitter())+
scale_x_continuous(breaks = seq(0,82,2))
# scale_x_continuous(breaks = seq(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001, position = position_jitter()) #+
# scale_x_continuous(breaks = seq(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = 1/100, position = position_jitter()) #+
# scale_x_continuous(breaks = seq(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = 1/100, position = position_jitter()) +
scale_x_continuous(breaks = seq(0,82,2))
cor.test(dd$depth, dd$price)
cor.test(subset(dd, dd$depth >60 & dd$depth < 70), dd$price)
cor.test(subset(dd, dd$depth >60 & dd$depth < 70)$depth, dd$price)
cor.test(dd$price, dd$depth)
range(dd$price)
summary(dd)
ggplot(dd, aes(carat, price)) +
geom_point() +
xlim(0.2, quantile(carat, .99)) +
ylim(200, quantile(price, .99))
ggplot(dd, aes(carat, price)) +
geom_point() +
xlim(0.2, quantile(dd$carat, .99)) +
ylim(200, quantile(dd$price, .99))
?quantile
ggplot(dd, aes(carat, price)) +
geom_point() +
xlim(0.2, quantile(dd$carat, .99)) +
ylim(200, quantile(dd$price, .99, na.rm = TRUE))
#price v volume
dd$volume <- dd$x * dd$y * dd$z
ggplot(dd, aes(volume, price)) +
geom_line()
ggplot(dd, aes(volume, price)) +
geom_point()
count(dd$volume == 0)
cor.test(dd$volume, dd$price)
s1 <- subset(dd, volume != 0 & volume >= 800)
cor.test(s1$volume, s1$price)
cor.test(s1$price,s1$volume)
s1 <- subset(dd, volume != 0 & volume <= 800)
cor.test(s1$price,s1$volume)
cor.test(s1$volume, s1$price)
ggplot(s1, aes(volume, price)) +
geom_point(alpha = 1/100) +
geom_smooth(method = 'lm')
library(dplyr)
d_by_clarity <- dd %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
View(d_by_clarity)
View(dd)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
setwd("C:/Users/Noah/Desktop/Nanoprojects/Term2/eda-course-materials/lesson5")
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv")
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
names(pf)
View(pf)
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", "\t")
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", "/t")
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", sept = "/t")
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", sept = '\t')
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", sep = '\t')
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
head(pf)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library(dplyr)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
arrange(age)
View(pf.fc_by_age_gender)
library(dplyr)
pf2 <- subset(pf, !is.na(gender))
pf.fc_by_age_gender <- pf2 %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
arrange(age)
View(pf.fc_by_age_gender)
ggplot(pf.fc_by_age_gender, aes(mean_friend_count, age)) +
geom_line(aes(color = gender))
ggplot(pf.fc_by_age_gender, aes(age,mean_friend_count)) +
geom_line(aes(color = gender))
ggplot(pf.fc_by_age_gender, aes(age, median_friend_count)) +
geom_line(aes(color = gender))
?subset
library(tidyr)
pf3 <- spread(subset(pf.fc_by_age_gender, select = c("age","gender", "median_friend_count")), gender, median_friend_count)
View(pf3)
library(tidyr)
pf.fc_by_age_gender.wide <- spread(subset(pf.fc_by_age_gender, select = c("age","gender", "median_friend_count")), gender, median_friend_count)
View(pf.fc_by_age_gender)
pf4 <- subset(pf.fc_by_age_gender,
select = c("age","gender", "median_friend_count")) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = female / male)
View(pf4)
pf.fc_by_age_gender.wide$ratio = female / male
pf.fc_by_age_gender.wide$ratio = pf.fc_by_age_gender.wide$female / pf.fc_by_age_gender.wide$male
View(pf.fc_by_age_gender.wide)
View(pf4)
?geom_hline
ggplot(pf.fc_by_age_gender.wide, aes(age, ratio)) +
geom_point() +
geom_hline(yintercept = 1)
ggplot(pf.fc_by_age_gender.wide, aes(age, ratio)) +
geom_line() +
geom_hline(yintercept = 1)
ggplot(pf.fc_by_age_gender.wide, aes(age, ratio)) +
geom_line() +
geom_hline(yintercept = 1, linetype = 2)
summary(pf$tenure)
pf$year_joined <- 2014-pf$tenure/365
View(pf)
pf$year_joined <- floor(2014-pf$tenure/365)
summary(pf$year_joined)
table(pf$year_joined)
?table
?cut
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(5,2,1,2))
pf$year_joined.bucket <- cut(pf$year_joined,
breaks = c(2009, 2011, 2012, 2014))
View(pf)
table(pf$year_joined.bucket)
pf$year_joined.bucket <- cut(pf$year_joined,
breaks = c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket)
library(dplyr)
pf2 <- subset(pf, !is.na(gender))
pf.fc_by_age_gender <- pf2 %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
arrange(age)
View(pf2)
ggplot(pf2, aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket))
ggplot(pf2, aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(pf2, aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(pf2, aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(pf2, aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(pf2, aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(pf2, aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median) +
geom_line(data = subset(pf2, !is.na(year_joined.bucket)),
stat = "summary", fun.y = mean(friend_count),
linetype = 2)
ggplot(pf2, aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median) +
geom_line(data = subset(pf2, !is.na(year_joined.bucket)),
stat = "summary", fun.y = mean(pf2$friend_count),
linetype = 2)
ggplot(subset(pf2, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median) +
geom_line(data = subset(pf2, !is.na(year_joined.bucket)),
stat = "summary", fun.y = mean(pf2$friend_count),
linetype = 2)
ggplot(subset(pf2, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median) +
geom_line(stat = "summary", fun.y = mean(pf2$friend_count),
linetype = 2)
ggplot(subset(pf2, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary", fun.y = mean +
geom_line(stat = "summary", fun.y = mean,
linetype = 2)
ggplot(subset(pf2, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = mean,
linetype = 2)
ggplot(subset(pf2, !is.na(year_joined.bucket)), aes(age, friend_count)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = mean,
linetype = 2)
pf$friend_rate <- subset(pf, tenure != 0) %>%
friend_count / tenure
pf$friend_rate <- subset(pf, tenure != 0) %>%
pf$friend_count / pf$tenure
pf$friend_rate <- subset(pf, tenure != 0)$friend_count /subset(pf, tenure != 0)$tenure
subset(pf, tenure != 0)$friend_count /subset(pf, tenure != 0)$tenure
summary(subset(pf, tenure != 0)$friend_count /subset(pf, tenure != 0)$tenure)
#answer
with(subset(pf, tenure !=0), summary(friend_count / tenure))
ggplot(pf5, aes(age, friend_per_day)) +
geom_line(aes(color = year_joined.bucket))
pf5 <- subset(pf, tenure >=1) %>%
mutate(friend_per_day = friendships_initiated / tenure)
ggplot(pf5, aes(age, friend_per_day)) +
geom_line(aes(color = year_joined.bucket))
ggplot(pf5, aes(age, friend_per_day)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
pf5 <- subset(pf, tenure >=1) %>%
mutate(friend_per_day = friendships_initiated / tenure)
ggplot(pf5, aes(tenure, friend_per_day)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(pf5, aes(tenure, friend_per_day)) +
geom_smooth(aes(color = year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(pf5, aes(tenure, friend_per_day)) +
geom_smooth(aes(color = year_joined.bucket))
